from bottle import route, run
from bottle import template, get, post, request
from paho.mqtt import client as mqtt_client
import time
# from readMQTT import waslos

@route('/hello')
def hello():
    MQTT_PORT=1883                  
    MQTT_ADDRESS="141.22.194.198"   # IP Adresse: 141.22.194.198/ Außerhalb der Hochschule unterscheidet sie sich
    MQTT_CLIENT_NAME="Diana_read"
    MQTT_TOPIC="MEDS/Kanal"
    TICK_RATE_HZ=2                  
    TICK_RATE=1/TICK_RATE_HZ        # Wie oft wird nach neuen Nachrichtenüberprüft

    # Liste für die Nachrichten zum Zwischenspeichern
    message_queue = []      
    # Funktion die beim eintreffen einer Nachricht diese in eine Liste packt
    def on_message(client, userdata, msg):
        message=msg.payload.decode()
        message_queue.append(message)
    # Verbinden mit MQTT
    client = mqtt_client.Client(MQTT_CLIENT_NAME)       # Erstellen des MQTT Clients
    client.connect(MQTT_ADDRESS,MQTT_PORT)              # Verbinden mit dem Broker
    # Subscribe zum Thema und Funktion "on_message" hinzufügen
    client.subscribe(MQTT_TOPIC)
    client.on_message = on_message
    # Für immer laufen lassen: Start des MQTT Clients
    client.loop_start()
    value_queue = []
    while (True) and len(value_queue)<3:
        last_value=""
        value_queue = []
        # Kurz warten
        time.sleep(TICK_RATE)
        # Wenn es noch neue Nachrichten gibt...
        while len(message_queue)>0 and len(value_queue)<3:
            #...dann kopiere diese von der Empfangsliste in die Anzeige-Liste
            last_value=message_queue.pop()
            value_queue.append(last_value)
            print(last_value)
        x = 'Hello World!' + str(value_queue)
        return x
 
@route('/')
@route('/hello/<name>')
def greet(name='Stranger'):
    return template('Hello {{name}}, how are you?', name=name)
 
@get('/login') # or @route('/login')
def login():
    return '''
        <form action="/login" method="post">
            Username: <input name="username" type="text" />
            Password: <input name="password" type="password" />
            <input value="Login" type="submit" />
        </form>
    '''
 
@post('/login') # or @route('/login', method='POST')
def do_login():
    username = request.forms.get('username')
    password = request.forms.get('password')
    if check_login(username, password):
        return "<p>Your login information was correct.</p>"
    else:
        return "<p>Login failed.</p>"
    
run(host='localhost', port=8080, debug=True)